// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace BLSystem.Models
{
    public partial class BLSystemContext : DbContext
    {
        public BLSystemContext()
        {
        }

        public BLSystemContext(DbContextOptions<BLSystemContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Bog> Bøger { get; set; }
        public virtual DbSet<BogHold> BogHolds { get; set; }
        public virtual DbSet<Fag> Fags { get; set; }
        public virtual DbSet<Hold> Holds { get; set; }
        public virtual DbSet<Semestre> Semestres { get; set; }
        public virtual DbSet<Uddannelse> Uddannelses { get; set; }
        public virtual DbSet<Underviser> Undervisers { get; set; }
        public virtual DbSet<UnderviserBog> UnderviserBogs { get; set; }
        public virtual DbSet<UnderviserHold> UnderviserHolds { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. See http://go.microsoft.com/fwlink/?LinkId=723263 for guidance on storing connection strings.
                optionsBuilder.UseSqlServer("Data Source=(localdb)\\MSSQLLocalDB;Initial Catalog=BLSystem;Integrated Security=True;Connect Timeout=30;Encrypt=False;TrustServerCertificate=False;ApplicationIntent=ReadWrite;MultiSubnetFailover=False");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Bog>(entity =>
            {
                entity.Property(e => e.Bog_Id).ValueGeneratedNever();

                entity.Property(e => e.Billede).IsUnicode(false);

                entity.Property(e => e.Forfatter).IsUnicode(false);

                entity.Property(e => e.Title).IsUnicode(false);
            });

            modelBuilder.Entity<BogHold>(entity =>
            {
                entity.Property(e => e.BogHold_Id).ValueGeneratedNever();

                entity.HasOne(d => d.Bog)
                    .WithMany(p => p.BogHolds)
                    .HasForeignKey(d => d.Bog_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__BogHold__Bog_id__08B54D69");

                entity.HasOne(d => d.Hold)
                    .WithMany(p => p.BogHolds)
                    .HasForeignKey(d => d.Hold_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__BogHold__Hold_id__09A971A2");
            });

            modelBuilder.Entity<Fag>(entity =>
            {
                entity.Property(e => e.FagId).ValueGeneratedNever();

                entity.Property(e => e.FagNavn).IsUnicode(false);
            });

            modelBuilder.Entity<Hold>(entity =>
            {
                entity.Property(e => e.Hold_Id).ValueGeneratedNever();
            });

            modelBuilder.Entity<Semestre>(entity =>
            {
                entity.Property(e => e.SemestreId).ValueGeneratedNever();

                entity.Property(e => e.Navn).IsUnicode(false);
            });

            modelBuilder.Entity<Uddannelse>(entity =>
            {
                entity.Property(e => e.UddannelseId).ValueGeneratedNever();

                entity.Property(e => e.UddannelseNavn).IsUnicode(false);
            });

            modelBuilder.Entity<Underviser>(entity =>
            {
                entity.Property(e => e.Underviser_Id).ValueGeneratedNever();

                entity.Property(e => e.Initialer).IsUnicode(false);

                entity.Property(e => e.Navn).IsUnicode(false);
            });

            modelBuilder.Entity<UnderviserBog>(entity =>
            {
                entity.Property(e => e.UnderviserBogId).ValueGeneratedNever();

                entity.HasOne(d => d.Bog)
                    .WithMany(p => p.UnderviserBogs)
                    .HasForeignKey(d => d.BogId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Undervise__Bog_i__05D8E0BE");

                entity.HasOne(d => d.Underviser)
                    .WithMany(p => p.UnderviserBogs)
                    .HasForeignKey(d => d.UnderviserId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Undervise__Under__04E4BC85");
            });

            modelBuilder.Entity<UnderviserHold>(entity =>
            {
                entity.Property(e => e.UnderviserHoldId).ValueGeneratedNever();

                entity.HasOne(d => d.Hold)
                    .WithMany(p => p.UnderviserHolds)
                    .HasForeignKey(d => d.HoldId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Undervise__Hold___4E88ABD4");

                entity.HasOne(d => d.Underviser)
                    .WithMany(p => p.UnderviserHolds)
                    .HasForeignKey(d => d.UnderviserId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Undervise__Under__4D94879B");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}